package bg.tu_varna.sit.a1.f23621627.project.core;

import org.json.JSONObject;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

public class JsonManager {
    private JSONObject jsonObject;
    private String filePath;
    private boolean isModified;

    public void open(String path) {
        try {
            String content = new String(Files.readAllBytes(Paths.get(path)));
            this.jsonObject = new JSONObject(content);
            this.filePath = path;
            this.isModified = false;
            System.out.println("File has been opened successfully.");
        } catch (IOException e) {
            System.out.println("Error while opening the file: " + e.getMessage());
        } catch (Exception e) {
            System.out.println("Invalid JSON format: " + e.getMessage());
        }
    }

    public void close() {
        if (jsonObject != null) {
            jsonObject = null;
            filePath = null;
            isModified = false;
            System.out.println("The file is closed.");
        } else {
            System.out.println("There is no open file.");
        }
    }

    public void save() {
        if (jsonObject != null && filePath != null) {
            try {
                Files.write(Paths.get(filePath), jsonObject.toString(4).getBytes());
                isModified = false;
                System.out.println("The file has been saved successfully.");
            } catch (IOException e) {
                System.out.println("Error while saving the file: " + e.getMessage());
            }
        } else {
            System.out.println("There is no open file to save.");
        }
    }

    public void saveAs(String path) {
        if (jsonObject != null) {
            try {
                Files.write(Paths.get(path), jsonObject.toString(4).getBytes());
                filePath = path;
                isModified = false;
                System.out.println("The file has been saved as new successfully.");
            } catch (IOException e) {
                System.out.println("Error saving the new file: " + e.getMessage());
            }
        } else {
            System.out.println("There is no open file to save.");
        }
    }

    public boolean hasUnsavedChanges() {
        return isModified;
    }

    public void markModified() {
        isModified = true;
    }

    public JSONObject getJsonObject() {
        return jsonObject;
    }

}

