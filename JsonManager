package bg.tu_varna.sit.a1.f23621627.project.core;

import org.json.JSONObject;

import java.io.*;

public class JsonManager {
    private JSONObject jsonObject;
    private String filePath;
    private boolean isModified;

    public void open(String path) {
        try (BufferedReader reader = new BufferedReader(new FileReader(path))) {
            StringBuilder contentBuilder = new StringBuilder();
            String line;

            while ((line = reader.readLine()) != null) {
                contentBuilder.append(line);
            }

            if (!path.endsWith(".json")) {
                System.out.println("Only .json files are supported.");
                return;
            }

            this.jsonObject = new JSONObject(contentBuilder.toString());
            this.filePath = path;
            this.isModified = false;
            System.out.println("File has been opened successfully.");
        } catch (IOException e) {
            System.out.println("Error while opening the file: " + e.getMessage());
        } catch (Exception e) {
            System.out.println("Invalid JSON format: " + e.getMessage());
        }
    }

    public void close() {
        if (jsonObject != null) {
            jsonObject = null;
            filePath = null;
            isModified = false;
            System.out.println("The file is closed.");
        } else {
            System.out.println("There is no open file.");
        }
    }

    public void save() {
        if (jsonObject != null && filePath != null) {
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) {
                writer.write(jsonObject.toString(4));
                isModified = false;
                System.out.println("The file has been saved successfully.");
            } catch (IOException e) {
                System.out.println("Error while saving the file: " + e.getMessage());
            }
        } else {
            System.out.println("There is no open file to save.");
        }
    }

    public void saveAs(String path) {
        if (jsonObject != null) {
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(path))) {
                writer.write(jsonObject.toString(4));
                filePath = path;
                isModified = false;
                System.out.println("The file has been saved as new successfully.");
            } catch (IOException e) {
                System.out.println("Error saving the new file: " + e.getMessage());
            }
        } else {
            System.out.println("There is no open file to save.");
        }
    }

    public boolean hasUnsavedChanges() {
        return isModified;
    }

    public void markModified() {
        isModified = true;
    }

    public JSONObject getJsonObject() {
        return jsonObject;
    }
}
